diff --git a/node_modules/eslint-plugin-react-native/lib/rules/sort-styles.js b/node_modules/eslint-plugin-react-native/lib/rules/sort-styles.js
index b62252e..fa9bebb 100644
--- a/node_modules/eslint-plugin-react-native/lib/rules/sort-styles.js
+++ b/node_modules/eslint-plugin-react-native/lib/rules/sort-styles.js
@@ -19,6 +19,57 @@ const {
   isEitherShortHand,
 } = astHelpers;
 
+
+const PropertiesOrder = [
+  'flex',
+  'square',
+  'height',
+  'width',
+  'maxHeight',
+  'maxWidth',
+  'minHeight',
+  'minWidth',
+  'aspectRatio',
+  'overflow',
+  'display',
+  'direction',
+  'flexDirection',
+  'flexBasis',
+  'flexGrow',
+  'flexShrink',
+  'flexWrap',
+  'justifyContent',
+  'alignItems',
+  'alignContent',
+  'alignSelf',
+  'position',
+  'zIndex',
+  'top',
+  'right',
+  'bottom',
+  'left',
+  'start',
+  'end',
+  'margin',
+  'marginTop',
+  'marginBottom',
+  'marginVertical',
+  'marginRight',
+  'marginLeft',
+  'marginHorizontal',
+  'marginStart',
+  'marginEnd',
+  'padding',
+  'paddingTop',
+  'paddingBottom',
+  'paddingVertical',
+  'paddingRight',
+  'paddingLeft',
+  'paddingHorizontal',
+  'paddingStart',
+  'paddingEnd',
+]
+
 //------------------------------------------------------------------------------
 // Rule Definition
 //------------------------------------------------------------------------------
@@ -28,25 +79,24 @@ module.exports = (context) => {
   const options = context.options[1] || {};
   const { ignoreClassNames } = options;
   const { ignoreStyleProperties } = options;
-  const isValidOrder = order === 'asc' ? (a, b) => a <= b : (a, b) => a >= b;
+  const getStylePropertyIdentifierOrder = (propertyName) => {
+    let propertyOrder = PropertiesOrder.indexOf(propertyName);
+    propertyOrder === -1 && (propertyOrder = PropertiesOrder.length + propertyName.length);
+
+    return propertyOrder;
+  };
+
+  const isValidOrder = (a, b) => getStylePropertyIdentifierOrder(a) <= getStylePropertyIdentifierOrder(b)
   
   const sourceCode = context.getSourceCode();
 
   function sort(array) {
-    return [].concat(array).sort((a, b) => {
-      const identifierA = getStylePropertyIdentifier(a);
-      const identifierB = getStylePropertyIdentifier(b);
-
-      let sortOrder = 0;
-      if (isEitherShortHand(identifierA, identifierB)) {
-        return a.range[0] - b.range[0];
-      } if (identifierA < identifierB) {
-        sortOrder = -1;
-      } else if (identifierA > identifierB) {
-        sortOrder = 1;
-      }
-      return sortOrder * (order === 'asc' ? 1 : -1);
+    const retur = [].concat(array).sort((x, y) => {
+      const identifierA = getStylePropertyIdentifier(x);
+      const identifierB = getStylePropertyIdentifier(y);
+      return getStylePropertyIdentifierOrder(identifierA) - getStylePropertyIdentifierOrder(identifierB);
     });  
+    return retur;
   }
 
   function report(array, type, node, prev, current) {
@@ -61,7 +111,7 @@ module.exports = (context) => {
 
     context.report({
       node,
-      message: `Expected ${type} to be in ${order}ending order. '${currentName}' should be before '${prevName}'.`,
+      message: `Expected ${type} to be in convinienced order. '${currentName}' should be before '${prevName}'.`,
       loc: current.key.loc,
       fix: hasComments ? undefined : (fixer) => {
         const sortedArray = sort(array);
diff --git a/node_modules/eslint-plugin-react-native/lib/util/stylesheet.js b/node_modules/eslint-plugin-react-native/lib/util/stylesheet.js
index ff8da41..257f99a 100644
--- a/node_modules/eslint-plugin-react-native/lib/util/stylesheet.js
+++ b/node_modules/eslint-plugin-react-native/lib/util/stylesheet.js
@@ -36,6 +36,12 @@ StyleSheets.prototype.markAsUsed = function (fullyQualifiedName) {
       .styleSheets[styleSheetName]
       .filter((property) => property.key.name !== styleSheetProperty);
   }
+
+  if (this.styleSheets[undefined]) {
+    this.styleSheets[undefined] = this
+      .styleSheets[undefined]
+      .filter((property) => property.key.name !== styleSheetProperty);
+  }
 };
 
 /**
